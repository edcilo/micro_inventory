version: "3.3"

services:
  inventory_redis_001:
    image: redis:alpine
    container_name: inventory_redis_001
    ports:
      - "${APP_REDIS_PORT:-6379}:6379"
    networks:
      - inventoryMicroNet

  inventory_memcached_001:
    image: memcached:1.6.7-alpine
    container_name: inventory_memcached_001
    networks:
      - inventoryMicroNet

  inventory_database_001:
    image: mysql:latest
    container_name: inventory_database_001
    restart: always
    ports:
      - "${APP_MYSQL_PORT:-3306}:3306"
    volumes:
      - inventoryDbVolume:/var/lib/mysql
      #- ./docker/mysql/scripts/my.cnf:/etc/mysql/conf.d/my.cnf
      #- ./docker/mysql/logs:/var/lib/mysql/logs
    networks:
      - inventoryMicroNet
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-database}
      MYSQL_USER: ${DB_USERNAME:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    cap_add:
      - CAP_SYS_NICE

  inventory_php_001:
    build: docker/php
    container_name: inventory_php_001
    volumes:
      - ./:/var/www/html
      - ./docker/php/conf/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - inventoryMicroNet

  inventory_web_001:
    image: nginx:alpine
    container_name: inventory_web_001
    ports:
      - ${APP_PORT:-80}:80
      - ${APP_SSL_PORT:-443}:443
    volumes:
      - ./docker/nginx/sites:/etc/nginx/conf.d
      - ./docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/ssl
      - ./:/var/www/html
    networks:
      - inventoryMicroNet

networks:
  inventoryMicroNet:
    driver: "bridge"

volumes:
  inventoryDbVolume:
